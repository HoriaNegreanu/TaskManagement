@model TaskManagement.Models.TaskItemFiltersViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a type="button" class="btn btn-primary" asp-action="Create">Create New Task</a> 
    <a type="button" class="btn btn-primary" asp-controller="Projects" asp-action="CreateInTask">Create New Project</a>
    <a type="button" class="btn btn-success" asp-controller="TaskItemsClosed" asp-action="Index">View Closed Tasks</a>
</p>
<form asp-controller="TaskItems" asp-action="Index" method="get">
    <p>
        Title: <input class="form-control-inline" type="text" name="SearchTitle" />
        Project:
        <select class="form-control-inline" asp-for="TaskProject" asp-items="Model.Projects">
            <option value="">All</option>
        </select>
        Assigned To:
        <select class="form-control-inline" asp-for="TaskAssignedTo" asp-items="Model.Users">
            <option value="">All</option>
        </select>
        Priority:
        <select class="form-control-inline" asp-for="TaskPriority" asp-items="Model.Priorities">
            <option value="">All</option>
        </select>
        Status:
        <select class="form-control-inline" asp-for="TaskStatus" asp-items="Model.Statuses">
            <option value="">All</option>
        </select>
        <input class="btn btn-success"type="submit" value="Filter" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TaskItems[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskItems[0].ProjectID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskItems[0].CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskItems[0].AssignedTo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskItems[0].CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskItems[0].ActivatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskItems[0].WorkedHours)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskItems[0].Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskItems[0].Status)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.TaskItems) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Project.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedBy)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AssignedTo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ActivatedDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WorkedHours)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Priority)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = "";
    if (Model.CurrentPage <= 1)
        prevDisabled = "disabled";

    var nextDisabled = "";
    if (Model.CurrentPage >= Model.TotalPages)
        nextDisabled = "disabled";
}
<form method="get">
    <p>
        <input type="hidden" asp-for="CurrentPage" />
        <input type="hidden" asp-for="TaskProject" />
        <input type="hidden" asp-for="TaskAssignedTo" />
        <input type="hidden" asp-for="TaskPriority" />
        <input type="hidden" asp-for="TaskStatus" />
        <input type="hidden" asp-for="SearchTitle" />
        <input class="btn btn-secondary @prevDisabled"type="submit" value="Previous Page" asp-controller="TaskItems" asp-action="PreviousPage"/>
        <input class="btn btn-secondary @nextDisabled"type="submit" value="Next Page" asp-controller="TaskItems" asp-action="NextPage"/>
    </p>
</form>