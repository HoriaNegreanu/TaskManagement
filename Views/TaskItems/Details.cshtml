@model TaskManagement.Models.TaskItemViewModel
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = Model.TaskItem.Title + " Details";
}
<h1>Details for @Model.TaskItem.Title</h1>
<div>
    <hr class="color-purple-08" />
    <dl class="row">
        <div class="col-md-4 col-sm-6">
            <dt class = "row padding-inherit">
                @Html.DisplayNameFor(model => model.TaskItem.CreatedBy)
            </dt>
            <dd class = "row padding-inherit" style="padding:inherit">
                @Html.DisplayFor(model => model.TaskItem.CreatedBy)
            </dd>
        </div>
        <div class="col-md-4 col-sm-6">
            <dt class = "row padding-inherit">
                @Html.DisplayNameFor(model => model.TaskItem.AssignedTo)
            </dt>
            <dd class = "row padding-inherit">
                @Html.DisplayFor(model => model.TaskItem.AssignedTo)
            </dd>
        </div>
        <div class="col-md-4 col-sm-6">
            <dt class = "row padding-inherit">
                @Html.DisplayNameFor(model => model.TaskItem.WorkedHours)
            </dt>
            <dd class = "row padding-inherit">
                @Html.DisplayFor(model => model.TaskItem.WorkedHours)
            </dd>
        </div>
        <div class="col-md-4 col-sm-6">
            <dt class = "row padding-inherit">
                @Html.DisplayNameFor(model => model.TaskItem.Priority)
            </dt>
            <dd class = "row padding-inherit">
                @Html.DisplayFor(model => model.TaskItem.Priority)
            </dd>
        </div>
        <div class="col-md-4 col-sm-6">
            <dt class = "row padding-inherit">
                @Html.DisplayNameFor(model => model.TaskItem.Status)
            </dt>
            <dd class = "row padding-inherit">
                @Html.DisplayFor(model => model.TaskItem.Status)
            </dd>
        </div>
        <div class="col-md-12">
            <div class = "row padding-inherit">
                @Html.DisplayFor(model => model.TaskItem.Description)
            </div>
        </div>
    </dl>
</div>
<div>
    <a class="btn btn-purple" asp-action="Edit" asp-route-id="@Model?.TaskItem.ID">Edit</a>
    <a class="btn btn-secondary" asp-action="Index">Back to List</a>
</div>
<div class="row mt-3">
    <div class="col-md-12">
        <h4>Task Stages</h4>
        <hr />
        <div>
            @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorAndQARole")).Succeeded)
            {
                <form asp-action="Create" asp-controller="TaskStages">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="TaskItemID" value="@Model.TaskItem.ID" />
                    <div class="form-group mb-3 col-sm-4">
                        <label asp-for="Title" class="control-label"></label>
                        <input asp-for="Title" class="form-control" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="Message" class="control-label"></label>
                        <input asp-for="Message" class="form-control" />
                        <span asp-validation-for="Message" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Add stage" class="btn btn-purple" />
                    </div>
                </form>
            }
            <table class="table row-spacing" style="width:100%">
                <thead>
                    <tr>
                        <th style="width:25%">Title</th>
                        <th style="width:50%">Description</th>
                        <th style="width:10%">Status</th>
                        <th style="width:15%"></th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var item in Model.TaskStages)
                    {
                        <tr class="table-card">
                            <td style="width:25%">@item.Title</td>
                            <td style="width:50%">@item.Message</td>
                            @if (item.Status.Equals(StageStatus.Completed.ToString()))
                            {
                                <td style="color: green;width:10%">@item.Status</td>
                            }
                            else
                            {
                                <td style="color: orange;width:10%">@item.Status</td>
                            }
                            <td class="btn-table-group" style="width:15%">
                                <form method="post">
                                    @if (item.Status.Equals(StageStatus.Completed.ToString()))
                                    {
                                        <button type="submit" class="btn btn-purple" asp-controller="TaskStages" asp-action="SetProposed" asp-route-id="@item.ID"><i class="bi bi-x-circle"></i></button>
                                    }
                                    else
                                    {
                                        <button type="submit" class="btn btn-purple" asp-controller="TaskStages" asp-action="SetCompleted" asp-route-id="@item.ID"><i class="bi bi-check-circle"></i></button>
                                    }
                                    <a type="submit" class="btn btn-danger" asp-controller="TaskStages" asp-action="Delete" asp-route-id="@item.ID"><i class="bi bi-trash"></i></a>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<div class="row mt-3">
    <div class="col-md-6">
        <h4>Comments</h4>
        <hr />
        <div>
            <form asp-action="Create" asp-controller="Comments">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="TaskItemID" value="@Model.TaskItem.ID" />
                <div class="form-group mb-3">
                    <label asp-for="Message" class="control-label"></label>
                    <input asp-for="Message" class="form-control" />
                    <span asp-validation-for="Message" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Post comment" class="btn btn-purple" />
                </div>
            </form>
        </div>
        @foreach (var item in Model.Comments)
        {
            <div class="comment-body">
                <div class="mb-3">
                    <span class="authoring-info">@Html.DisplayFor(modelItem => item.Author), created on @Html.DisplayFor(modelItem => item.CreatedDate)</span>
                </div>
                <div>
                    @Html.DisplayFor(modelItem => item.Message)
                </div>
            </div>
        }
    </div>
    <div class="col-md-6">
        <h4>Files</h4>
        <hr />
        <div>
            <form method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="TaskItemID" value="@Model.TaskItem.ID" />
                <div class="form-group mb-3">
                    <input type="file" name="files" multiple required />
                    <input class="form-control-inline" type="text" autocomplete="off" placeholder="Enter File Description" name="description" required />
                </div>
                <div class="form-group mb-3">
                    <button type="submit" class="btn btn-purple" asp-controller="Files" asp-action="UploadToFileSystem">Upload</button>
                </div>  
            </form>
            <table class="table row-spacing">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th>Added On</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var file in Model.FilesOnFileSystem)
                    {
                        <tr class="table-card">
                            <td>@file.NameWithExtension</td>
                            <td>@file.Description</td>
                            <td>@file.CreatedOn</td>
                            <td class="btn-table-group">
                                <a type="button" class="btn btn-purple" asp-controller="Files" asp-action="DownloadFileFromFileSystem" asp-route-id="@file.Id"><i class="bi bi-download"></i></a>
                                <a type="button" class="btn btn-danger" asp-controller="Files" asp-action="DeleteFileFromFileSystem" asp-route-id="@file.Id"><i class="bi bi-trash"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
